-----------------
-- TABLE CREATION
------------------

CREATE TABLE BATCH
(
  BATCH_ID NVARCHAR(2),
  QUANTITY INT
);

CREATE TABLE ORDERS
(
  ORDER_NUMBER NVARCHAR(2),
  QUANTITY INT
);

INSERT INTO BATCH VALUES ('B1', 5), ('B2', 12), ('B3', 8);
INSERT INTO ORDERS VALUES ('O1', 2), ('O2', 8), ('O3', 2), ('O4', 5), ('O5', 9), ('O6', 5);

-- SELECT * FROM BATCH;
-- SELECT * FROM ORDERS;

/*
QUESTION: SEQUENTIALLY SHOW HOW MUCH QTY IS EACH ORDER TAKING FROM EACH BATCH, 
ALONG WITH SHORT QTY

ORDER_NUMBER, ORDER_TOTAL_QTY, BATCH_ID, QTY_FROM_BATCH, QTY_SHORT

*/


-- WITH CUM_BATCH AS (
--   SELECT BATCH_ID, 1 AS CUM_QTY FROM BATCH
--   UNION ALL 
--   SELECT C.BATCH_ID, (C.CUM_QTY+1) AS CUM_QTY
--   FROM CUM_BATCH AS C
--   JOIN BATCH AS B
--     ON C.BATCH_ID = B.BATCH_ID AND C.CUM_QTY < B.QUANTITY
--   )
  
-- , RNK_BATCH AS (
--   SELECT 
--     *
--     , ROW_NUMBER() OVER(ORDER BY BATCH_ID, CUM_QTY) AS RN
--   FROM CUM_BATCH
-- )


WITH CTE_NUMS AS
(
  SELECT 1 AS N
  UNION ALL
  SELECT C.N+1 AS N
  FROM CTE_NUMS AS C
    WHERE C.N < 100
)

, RN_BATCH AS (
  SELECT
    B.BATCH_ID
    , N.N AS CUM_QTY
    , ROW_NUMBER() OVER(ORDER BY B.BATCH_ID, N.N) AS RN 
  FROM BATCH AS B 
  LEFT JOIN CTE_NUMS AS N 
    ON B.QUANTITY >= N.N
)

, RN_ORDER AS (
  SELECT
    O.ORDER_NUMBER
    , N.N AS CUM_QTY
    , ROW_NUMBER() OVER(ORDER BY O.ORDER_NUMBER, N.N) AS RN 
  FROM ORDERS AS O 
  LEFT JOIN CTE_NUMS AS N 
    ON O.QUANTITY >= N.N
)

, CTE_JOIN AS (
  SELECT
    O.ORDER_NUMBER
    , B.BATCH_ID
    , O.RN
    , 1 AS QTY
  FROM RN_ORDER AS O 
  FULL JOIN RN_BATCH AS B 
    ON O.RN = B.RN
)

SELECT
  C.ORDER_NUMBER
    , C.BATCH_ID
  , MAX(O.QUANTITY) AS TOTAL_ORDER_QTY
  , CASE
      WHEN C.BATCH_ID IS NOT NULL
      THEN COUNT(1) 
      ELSE -1 * COUNT(1)
    END AS [QTY_FROM_BATCH/QTY_SHORT]
FROM CTE_JOIN AS C
LEFT JOIN ORDERS AS O
  ON C.ORDER_NUMBER = O.ORDER_NUMBER
GROUP BY C.ORDER_NUMBER, C.BATCH_ID
ORDER BY C.ORDER_NUMBER, COALESCE(BATCH_ID, 'B999');

















































