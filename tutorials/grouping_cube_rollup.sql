/*
-------------------
-- TABLES CREATION
-------------------

DROP TABLE IF EXISTS TECHTFQ.SALES;
DROP TABLE IF EXISTS TECHTFQ.PRODUCTS;

CREATE TABLE TECHTFQ.PRODUCTS 
(
	PRODUCT_ID INT IDENTITY(1,1 ) PRIMARY KEY,
	PRODUCT_NAME NVARCHAR(100)
);

INSERT INTO TECHTFQ.PRODUCTS (PRODUCT_NAME)
VALUES ('MACBOOK PRO'), ('iPHONE 15'), ('APPLE WATCH');

CREATE TABLE TECHTFQ.SALES
(
	SALE_ID INT IDENTITY(1,1) PRIMARY KEY,
	PRODUCT_ID INT,
	CITY NVARCHAR(50) NOT NULL,
	SALE_DATE DATE NOT NULL,
	AMOUNT INT NOT NULL,
	FOREIGN KEY (PRODUCT_ID) REFERENCES TECHTFQ.PRODUCTS(PRODUCT_ID) ON DELETE CASCADE
)

INSERT INTO TECHTFQ.SALES (PRODUCT_ID, CITY, SALE_DATE, AMOUNT) 
VALUES (1, 'New York',        '2025-09-01', 1200)
, (2, 'Los Angeles',     '2025-09-02', 950)
, (3, 'Chicago',         '2025-09-03', 760)
, (1, 'Houston',         '2025-09-04', 1340)
, (2, 'Phoenix',         '2025-09-05', 880)
, (3, 'Philadelphia',    '2025-09-06', 1020)
, (1, 'San Antonio',     '2025-09-07', 1120)
, (2, 'San Diego',       '2025-09-08', 990)
, (3, 'Dallas',          '2025-09-09', 870)
, (1, 'San Jose',        '2025-09-10', 1230)
, (2, 'Austin',          '2025-09-11', 915)
, (3, 'Jacksonville',    '2025-09-12', 805)
, (1, 'Fort Worth',      '2025-09-13', 1450)
, (2, 'Columbus',        '2025-09-14', 970)
, (3, 'Charlotte',       '2025-09-15', 910)
, (1, 'Indianapolis',    '2025-09-16', 1180)
, (2, 'San Francisco',   '2025-09-17', 985)
, (3, 'Seattle',         '2025-09-18', 950)
, (1, 'Denver',          '2025-09-19', 1070)
, (2, 'Boston',          '2025-09-20', 1005);

SELECT * FROM TECHTFQ.PRODUCTS;
SELECT * FROM TECHTFQ.SALES;

*/

/*
1) Multi level sales reporting, consider the following scenarios
	-- Total sales per city
	-- total sales per product
	-- total sales per each quarter of 2024
	-- total sales per city + product + quarter
	-- grand total sales

*/

/*
SELECT 
	S.CITY, P.PRODUCT_NAME, DATEPART(QUARTER, S.SALE_DATE) AS QTR
	, SUM(S.AMOUNT) AS SALES_AMOUNT
	, GROUPING(CITY) AS GRP_CITY
	, GROUPING(PRODUCT_NAME) AS GRP_PRODUCT
	, GROUPING(DATEPART(QUARTER, SALE_DATE)) AS GRP_QTR
FROM TECHTFQ.SALES AS S
JOIN TECHTFQ.PRODUCTS AS P
	ON S.PRODUCT_ID = P.PRODUCT_ID
GROUP BY 
GROUPING SETS (
	S.CITY
	, P.PRODUCT_NAME
	, DATEPART(QUARTER, S.SALE_DATE)
	, (S.CITY, P.PRODUCT_NAME, DATEPART(QUARTER, S.SALE_DATE))
	, ()
)
ORDER BY GRP_CITY, GRP_PRODUCT, GRP_QTR;
*/

/*
2) HIERARCHICAL SALES REPORT, CONSIDER THE FOLLOWING SCENARIO
	HIERARCHICAL REPORT SHOWING TOTAL SALES BY CITY, PRODUCT AND QUARTER,
	INCLUDING SUBTOTALS PER(CITY, PRODUCT), (CITY) AND A GRAND TOTAL
		-- TOTAL SALES PER CITY, PRODUCT AND QUARTER
		-- TOTAL SALES PER CITY AND PRODUCT
		-- TOTAL SALES PER CITY
		-- GRAND TOTAL
*/

/*
SELECT 
	S.CITY, P.PRODUCT_NAME, DATEPART(QUARTER, S.SALE_DATE) AS QTR
	, SUM(S.AMOUNT) AS SALES_AMOUNT
FROM TECHTFQ.SALES AS S
JOIN TECHTFQ.PRODUCTS AS P
	ON S.PRODUCT_ID = P.PRODUCT_ID
GROUP BY ROLLUP(CITY, PRODUCT_NAME, DATEPART(QUARTER, S.SALE_DATE));
*/

/* WHAT THIS DOES IS BASICALLY A HIERARCHICAL GROUPING, AND REMOVE GROUP FROM LAST EACH TIME
GROUP BY (CITY, PRODUCT_NAME, QTR)
UNION ALL -- REMOVE LAST GROUPING (QTR)
GROUP BY (CITY, PRODUCT_NAME)
UNION ALL
GROUP BY CITY
UNION ALL
GROUP BY ()
*/

SELECT 
	S.CITY, P.PRODUCT_NAME, DATEPART(QUARTER, S.SALE_DATE) AS QTR
	, SUM(S.AMOUNT) AS SALES_AMOUNT
FROM TECHTFQ.SALES AS S
JOIN TECHTFQ.PRODUCTS AS P
	ON S.PRODUCT_ID = P.PRODUCT_ID
GROUP BY CUBE(CITY, PRODUCT_NAME, DATEPART(QUARTER, S.SALE_DATE));